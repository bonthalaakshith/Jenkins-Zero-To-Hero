pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/bonthalaakshith/Jenkins-Zero-To-Hero'
            }
        }
        stage('Verify Docker Access') {
            steps {
                sh 'docker --version'
            }
        }
        stage('Build and Test') {
            steps {
                sh '''
                  echo "Listing project files..."
                  ls -ltr
                  echo "Building the project..."
                  cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package
                '''
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://20.115.59.1:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "akshithf51/ultimate-cicd:${BUILD_NUMBER}"
            }
            steps {
                script {
                    sh '''
                      echo "Building Docker image..."
                      cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                      docker build -t ${DOCKER_IMAGE} .
                    '''
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "bonthalaakshith"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        echo "Updating deployment.yml with build number ${BUILD_NUMBER}..."
                        git config user.email "akshith543@gmail.com"
                        git config user.name "bonthalaakshith"
                        git reset --hard
                        git clean -fd
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        echo "Updated deployment.yml:"
                        cat java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git diff-index --quiet HEAD || git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        echo "Pushing changes to GitHub..."
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for errors.'
        }
    }
}
